function obfuscate(source, VarName, WaterMark)
    warn("Started obfuscate")
    local Variable = VarName or "callmexdrop_"
    local WM

    if source == nil then
        source = [[print("Hello World!")]]
    end

    local ticks = tick()

    if typeof(WaterMark) == "string" and WaterMark ~= nil then
        WM = "    " .. tostring(WaterMark) .. " | Secure by  callmexdrop#2505"
    else
        WM = "    " .. "WaterMark" .. " | Secure by  callmexdrop#2505"
    end

    WM = "--[[" .. "\n" .. tostring(WM) .. "\n" .. "]]--" .. "\n\n"

    local random_ = function(length)
        local letters = {
            "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p",
            "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"
        }
        local code

        if math.random(1, 2) == 1 then
            code = "" .. letters[math.random(1, 26)]
        else
            code = "" .. tostring(letters[math.random(1, 26)]):upper()
        end

        for i = 1, tonumber(length) do
            if math.random(1, 2) == 1 then
                local get_letters = letters[math.random(1, 26)]
                if math.random(1, 2) == 1 then
                    code = code .. tostring(get_letters):upper()
                else
                    code = code .. tostring(get_letters)
                end
            else
                code = code .. tostring(math.random(0, 9))
            end
        end
        return tostring(code)
    end

    local StringToBinary = function(String)
        local BinaryString = {}

        for i, Character in ipairs(String:split'') do
            local Binary = ""
            local Byte = Character:byte()
            while Byte > 0 do
                Binary = tostring(Byte % 2) .. Binary
                Byte = math.floor(Byte / 2)
            end
            table.insert(BinaryString, string.format("%.8d", Binary))
        end

        return table.concat(BinaryString, " ")
    end

    local add_binary = function(number, s)
        local topic = {
            "Deobfuscate?",
            "whats going on?!",
            "IronBrew Fork? Nope.",
            "PSU Fork? Nope.",
            "tryinging to Deobfuscate smh",
            "New update when?",
            "no clue what your doing",
            "Free obfuscator!",
            "real",
            random_(math.random(50, 150)),
        }
        for i = 1, tonumber(number) do
            local str = [[local ]] .. Variable .. tostring(random_(math.random(10, 12))) .. [[ = ]] .. '"' .. StringToBinary(tostring(topic)) .. '"' .. "; "
            s = s .. str
        end

        return s
    end

    source = WM .. add_binary(1, source)

    warn("Obfuscation complete")
    return source
end

-- Example usage
local source_code = [[print("Hello World!")]]
local obfuscated_code = obfuscate(source_code, "myVar", "My WaterMark")
setclipboard(obfuscated_code)
